{"createdAt":"2025-05-16T02:21:07.381Z","updatedAt":"2025-05-16T02:36:22.000Z","id":"kR4IB17LP9vzrbs6","name":"2. BACKUP CREDENTIALS LÃŠN GITHUB","active":true,"isArchived":false,"nodes":[{"parameters":{},"id":"64aeb3a4-7630-4251-bd30-2903079b0172","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[-640,260],"typeVersion":1},{"parameters":{"options":{}},"id":"78821eb0-fe12-454a-9a96-24ec9f165d9f","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[-40,360],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1}]}},"id":"4e945444-1128-4083-9e43-87ab6b00e6b9","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[-640,460],"typeVersion":1.2},{"parameters":{"content":"## Main workflow backup ","height":435,"width":2089,"color":3},"id":"c6cd74bd-c132-468e-8977-9a950f28f847","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[-700,180],"typeVersion":1},{"parameters":{"command":"npx n8n export:credentials --all --decrypted"},"id":"2c48b21f-b4cc-4489-a239-fdb3ab6e4350","name":"Execute Command","type":"n8n-nodes-base.executeCommand","position":[-420,360],"typeVersion":1},{"parameters":{"jsCode":"// Function to beautify JSON\nfunction beautifyJson(jsonString) {\n  try {\n    // Parse the JSON string\n    const jsonObject = JSON.parse(jsonString);\n\n    // Format the JSON with indentation\n    return jsonObject; // Return the parsed object directly\n  } catch (error) {\n    // Return the error message if JSON is invalid\n    return `Invalid JSON: ${error.message}`;\n  }\n}\n\n// Retrieve the JSON object from the input data\nconst input = $input.all()[0].json;\n\n// Extract the JSON string from the stdout field\nconst jsonString = input.stdout.match(/\\[{.*}\\]/s);\n\n// Check if a valid JSON string is found\nif (!jsonString) {\n  return {\n    json: {\n      error: \"No valid JSON string found in stdout.\"\n    }\n  };\n}\n\n// Beautify the JSON\nconst beautifiedJson = beautifyJson(jsonString[0]);\n\n// Output the beautified JSON, ensuring each entry is in an object with a 'json' key\nconst output = beautifiedJson.map(entry => ({ json: entry }));\n\n// Return the output\nreturn output;\n"},"id":"7b6d21f3-28ca-418d-aeda-decd970af7fb","name":"JSON formatting","type":"n8n-nodes-base.code","position":[-240,360],"typeVersion":2},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"fcf27b73-ca44-4402-9e43-94b8e6bcd29f","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[180,360],"typeVersion":1},{"parameters":{"content":"# BACKUP CREDENTIALS LÃŠN GITHUB","height":80,"width":740},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[0,0],"id":"3801efa4-8379-4bc2-9f00-a7f6b0c30f70","name":"Sticky Note4"},{"parameters":{"content":"## Edit this node ðŸ‘‡\nrepo.owner = id github count\nrepo.name = github repo name","height":100,"width":270,"color":4},"id":"4f51c378-f731-416d-b768-65332d76073e","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[-480,640],"typeVersion":1,"disabled":true},{"parameters":{"inputSource":"passthrough"},"id":"9dd398b1-5faa-4069-ac3b-64c408ce1a44","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[-500,1000],"typeVersion":1.1},{"parameters":{"assignments":{"assignments":[{"id":"6cf546c5-5737-4dbd-851b-17d68e0a3780","name":"repo.owner","type":"string","value":"hoangtiny"},{"id":"452efa28-2dc6-4ea3-a7a2-c35d100d0382","name":"repo.name","type":"string","value":"n8n-backup-restore"},{"id":"81c4dc54-86bf-4432-a23f-22c7ea831e74","name":"repo.path","type":"string","value":"credentials/"}]},"options":{}},"id":"db8ffd16-7c18-4b0a-88c9-9ddf20b862ff","name":"Globals","type":"n8n-nodes-base.set","position":[-340,740],"typeVersion":3.4},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"name","value":"={{ $json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $json.repo.name }}"},"filePath":"={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"03506ffc-c961-45b4-9a06-b92391815a0f","name":"Get file data","type":"n8n-nodes-base.github","position":[-120,740],"typeVersion":1,"alwaysOutputData":true,"webhookId":"98eba206-4709-45fb-966a-9f09e81e2bde","credentials":{"githubApi":{"id":"VTDsh4703epiglOO","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"content":"https://www.youtube.com/channel/UCIhrU-hkXylBKX8MRaN_2iA/ \nBase on solomon's work","height":80,"width":385,"color":7},"id":"760cef06-a892-4bdd-aa9a-e6a04eb699fd","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[1000,1400],"typeVersion":1,"disabled":true},{"parameters":{"resource":"file","operation":"edit","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"},"filePath":"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"3e3277b2-21cd-469b-ac8e-df6f80de057e","name":"Edit existing file","type":"n8n-nodes-base.github","position":[940,1000],"typeVersion":1,"webhookId":"19db097a-c49d-4dc6-acf2-7f016226fcde","credentials":{"githubApi":{"id":"VTDsh4703epiglOO","name":"GitHub account"}}},{"parameters":{"resource":"file","owner":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.owner }}"},"repository":{"__rl":true,"mode":"name","value":"={{ $('Globals').item.json.repo.name }}"},"filePath":"={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"eda0daf6-60b6-4883-89ec-6da05f14e7ef","name":"Create new file","type":"n8n-nodes-base.github","position":[940,1160],"typeVersion":1,"webhookId":"1e5a3a7b-02df-45a0-9719-2a2f2f005ffd","credentials":{"githubApi":{"id":"VTDsh4703epiglOO","name":"GitHub account"}}},{"parameters":{},"id":"087a6b30-987c-49ed-9734-62509dc6f585","name":"File is new","type":"n8n-nodes-base.noOp","position":[720,1160],"typeVersion":1},{"parameters":{},"id":"860395b2-0285-4bea-80a4-cf1291b45b4d","name":"File is different","type":"n8n-nodes-base.noOp","position":[720,1000],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"b7b223fb-4e46-4994-a4b6-d3239ce482c9","name":"Check Status","type":"n8n-nodes-base.switch","position":[500,1000],"typeVersion":1},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"},"id":"85dc4949-cb96-4259-a058-7d80adbddb0a","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[280,1000],"typeVersion":1},{"parameters":{},"id":"11debed9-add6-4b7a-a845-5ae96fa11849","name":"Merge Items","type":"n8n-nodes-base.merge","position":[80,1000],"typeVersion":2},{"parameters":{"conditions":{"options":{"version":1,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"52d7a254-b5c4-4112-9c41-41f5c1895457","name":"If file too large","type":"n8n-nodes-base.if","position":[80,740],"typeVersion":2},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"6134cc45-6284-43ee-b1f8-852ec2f63970","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[280,720],"typeVersion":4.2},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"c10367e9-d2d9-4327-9936-8cd4555ee58d","name":"Return","type":"n8n-nodes-base.set","position":[1160,980],"typeVersion":3.3},{"parameters":{"content":"## Subworkflow","height":691,"width":2087,"color":6},"id":"4b59a797-68a5-42be-9256-2595f98f5af4","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-700,640],"typeVersion":1,"disabled":true}],"connections":{"On clicking 'execute'":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Execute Workflow","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"Execute Command":{"main":[[{"node":"JSON formatting","type":"main","index":0}]]},"JSON formatting":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Globals","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Globals":{"main":[[{"node":"Get file data","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Check Status":{"main":[[],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"e2ed7923-f3a4-47c0-b6aa-38834ae33eb2","triggerCount":1,"tags":[{"createdAt":"2025-05-16T02:21:01.287Z","updatedAt":"2025-05-16T02:21:01.287Z","id":"AoE87Y5Cs4M3lEoP","name":"core"}]}